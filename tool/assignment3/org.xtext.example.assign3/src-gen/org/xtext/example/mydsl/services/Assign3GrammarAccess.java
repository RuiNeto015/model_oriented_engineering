/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class Assign3GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSubjectKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSubjectAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubjectSubjectParserRuleCall_4_0 = (RuleCall)cSubjectAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Model returns Model:
		//    'Model'
		//    name=EString
		//    '{'
		//        'subject' subject=Subject
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Model'
		//name=EString
		//'{'
		//    'subject' subject=Subject
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'subject'
		public Keyword getSubjectKeyword_3() { return cSubjectKeyword_3; }
		
		//subject=Subject
		public Assignment getSubjectAssignment_4() { return cSubjectAssignment_4; }
		
		//Subject
		public RuleCall getSubjectSubjectParserRuleCall_4_0() { return cSubjectSubjectParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class UserFeedbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.UserFeedback");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReviewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCommentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UserFeedback returns UserFeedback:
		//    Review | Comment;
		@Override public ParserRule getRule() { return rule; }
		
		//Review | Comment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Review
		public RuleCall getReviewParserRuleCall_0() { return cReviewParserRuleCall_0; }
		
		//Comment
		public RuleCall getCommentParserRuleCall_1() { return cCommentParserRuleCall_1; }
	}
	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Step");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEndParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAutomaticParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cManualParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Step returns Step:
		//    End | Automatic | Manual;
		@Override public ParserRule getRule() { return rule; }
		
		//End | Automatic | Manual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//End
		public RuleCall getEndParserRuleCall_0() { return cEndParserRuleCall_0; }
		
		//Automatic
		public RuleCall getAutomaticParserRuleCall_1() { return cAutomaticParserRuleCall_1; }
		
		//Manual
		public RuleCall getManualParserRuleCall_2() { return cManualParserRuleCall_2; }
	}
	public class ValidationStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.ValidationStep");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAutomaticParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManualParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValidationStep returns ValidationStep:
		//    Automatic | Manual;
		@Override public ParserRule getRule() { return rule; }
		
		//Automatic | Manual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Automatic
		public RuleCall getAutomaticParserRuleCall_0() { return cAutomaticParserRuleCall_0; }
		
		//Manual
		public RuleCall getManualParserRuleCall_1() { return cManualParserRuleCall_1; }
	}
	public class SubjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Subject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cUserFeedbackKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUserFeedbackAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUserFeedbackUserFeedbackParserRuleCall_5_0 = (RuleCall)cUserFeedbackAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cUserFeedbackAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cUserFeedbackUserFeedbackParserRuleCall_6_1_0 = (RuleCall)cUserFeedbackAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cFeatureKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cFeatureAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cFeatureFeatureParserRuleCall_8_2_0 = (RuleCall)cFeatureAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cFeatureAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cFeatureFeatureParserRuleCall_8_3_1_0 = (RuleCall)cFeatureAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Subject returns Subject:
		//    'Subject'
		//    name=EString
		//    '{'
		//        'userFeedback' '{' userFeedback+=UserFeedback ( "," userFeedback+=UserFeedback)* '}'
		//        ('feature' '{' feature+=Feature ( "," feature+=Feature)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Subject'
		//name=EString
		//'{'
		//    'userFeedback' '{' userFeedback+=UserFeedback ( "," userFeedback+=UserFeedback)* '}'
		//    ('feature' '{' feature+=Feature ( "," feature+=Feature)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Subject'
		public Keyword getSubjectKeyword_0() { return cSubjectKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'userFeedback'
		public Keyword getUserFeedbackKeyword_3() { return cUserFeedbackKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//userFeedback+=UserFeedback
		public Assignment getUserFeedbackAssignment_5() { return cUserFeedbackAssignment_5; }
		
		//UserFeedback
		public RuleCall getUserFeedbackUserFeedbackParserRuleCall_5_0() { return cUserFeedbackUserFeedbackParserRuleCall_5_0; }
		
		//( "," userFeedback+=UserFeedback)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//userFeedback+=UserFeedback
		public Assignment getUserFeedbackAssignment_6_1() { return cUserFeedbackAssignment_6_1; }
		
		//UserFeedback
		public RuleCall getUserFeedbackUserFeedbackParserRuleCall_6_1_0() { return cUserFeedbackUserFeedbackParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//('feature' '{' feature+=Feature ( "," feature+=Feature)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'feature'
		public Keyword getFeatureKeyword_8_0() { return cFeatureKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//feature+=Feature
		public Assignment getFeatureAssignment_8_2() { return cFeatureAssignment_8_2; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_8_2_0() { return cFeatureFeatureParserRuleCall_8_2_0; }
		
		//( "," feature+=Feature)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//feature+=Feature
		public Assignment getFeatureAssignment_8_3_1() { return cFeatureAssignment_8_3_1; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_8_3_1_0() { return cFeatureFeatureParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFeatureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Feature returns Feature:
		//    {Feature}
		//    'Feature'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Feature}
		//'Feature'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Feature}
		public Action getFeatureAction_0() { return cFeatureAction_0; }
		
		//'Feature'
		public Keyword getFeatureKeyword_1() { return cFeatureKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class ReviewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Review");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReviewAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cReviewKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGradeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGradeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGradeTypeGradeTypeEnumRuleCall_4_1_0 = (RuleCall)cGradeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cReviewTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cReviewTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cReviewTypeReviewTypeEnumRuleCall_5_1_0 = (RuleCall)cReviewTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Review returns Review:
		//    {Review}
		//    'Review'
		//    name=EString
		//    '{'
		//        ('gradeType' gradeType=GradeType)?
		//        ('reviewType' reviewType=ReviewType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Review}
		//'Review'
		//name=EString
		//'{'
		//    ('gradeType' gradeType=GradeType)?
		//    ('reviewType' reviewType=ReviewType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Review}
		public Action getReviewAction_0() { return cReviewAction_0; }
		
		//'Review'
		public Keyword getReviewKeyword_1() { return cReviewKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('gradeType' gradeType=GradeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'gradeType'
		public Keyword getGradeTypeKeyword_4_0() { return cGradeTypeKeyword_4_0; }
		
		//gradeType=GradeType
		public Assignment getGradeTypeAssignment_4_1() { return cGradeTypeAssignment_4_1; }
		
		//GradeType
		public RuleCall getGradeTypeGradeTypeEnumRuleCall_4_1_0() { return cGradeTypeGradeTypeEnumRuleCall_4_1_0; }
		
		//('reviewType' reviewType=ReviewType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'reviewType'
		public Keyword getReviewTypeKeyword_5_0() { return cReviewTypeKeyword_5_0; }
		
		//reviewType=ReviewType
		public Assignment getReviewTypeAssignment_5_1() { return cReviewTypeAssignment_5_1; }
		
		//ReviewType
		public RuleCall getReviewTypeReviewTypeEnumRuleCall_5_1_0() { return cReviewTypeReviewTypeEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReplyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cReplyReplyKeyword_0_0 = (Keyword)cReplyAssignment_0.eContents().get(0);
		private final Assignment cModerationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cModerationModerationKeyword_1_0 = (Keyword)cModerationAssignment_1.eContents().get(0);
		private final Keyword cCommentKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommentTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCommentTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCommentTypeCommentTypeEnumRuleCall_5_1_0 = (RuleCall)cCommentTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cModerationProcessKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cModerationProcessAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cModerationProcessModerationProcessParserRuleCall_6_1_0 = (RuleCall)cModerationProcessAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Comment returns Comment:
		//    reply?='reply'
		//    moderation?='moderation'
		//    'Comment'
		//    name=EString
		//    '{'
		//        ('commentType' commentType=CommentType)?
		//        ('moderationProcess' moderationProcess=ModerationProcess)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//reply?='reply'
		//moderation?='moderation'
		//'Comment'
		//name=EString
		//'{'
		//    ('commentType' commentType=CommentType)?
		//    ('moderationProcess' moderationProcess=ModerationProcess)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//reply?='reply'
		public Assignment getReplyAssignment_0() { return cReplyAssignment_0; }
		
		//'reply'
		public Keyword getReplyReplyKeyword_0_0() { return cReplyReplyKeyword_0_0; }
		
		//moderation?='moderation'
		public Assignment getModerationAssignment_1() { return cModerationAssignment_1; }
		
		//'moderation'
		public Keyword getModerationModerationKeyword_1_0() { return cModerationModerationKeyword_1_0; }
		
		//'Comment'
		public Keyword getCommentKeyword_2() { return cCommentKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('commentType' commentType=CommentType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'commentType'
		public Keyword getCommentTypeKeyword_5_0() { return cCommentTypeKeyword_5_0; }
		
		//commentType=CommentType
		public Assignment getCommentTypeAssignment_5_1() { return cCommentTypeAssignment_5_1; }
		
		//CommentType
		public RuleCall getCommentTypeCommentTypeEnumRuleCall_5_1_0() { return cCommentTypeCommentTypeEnumRuleCall_5_1_0; }
		
		//('moderationProcess' moderationProcess=ModerationProcess)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'moderationProcess'
		public Keyword getModerationProcessKeyword_6_0() { return cModerationProcessKeyword_6_0; }
		
		//moderationProcess=ModerationProcess
		public Assignment getModerationProcessAssignment_6_1() { return cModerationProcessAssignment_6_1; }
		
		//ModerationProcess
		public RuleCall getModerationProcessModerationProcessParserRuleCall_6_1_0() { return cModerationProcessModerationProcessParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ModerationProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.ModerationProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModerationProcessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cStartStepKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStartStepAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cStartStepValidationStepCrossReference_4_0 = (CrossReference)cStartStepAssignment_4.eContents().get(0);
		private final RuleCall cStartStepValidationStepEStringParserRuleCall_4_0_1 = (RuleCall)cStartStepValidationStepCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStepKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cStepAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cStepStepParserRuleCall_5_2_0 = (RuleCall)cStepAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cStepAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cStepStepParserRuleCall_5_3_1_0 = (RuleCall)cStepAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ModerationProcess returns ModerationProcess:
		//    'ModerationProcess'
		//    name=EString
		//    '{'
		//        'startStep' startStep=[ValidationStep|EString]
		//        ('step' '{' step+=Step ( "," step+=Step)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ModerationProcess'
		//name=EString
		//'{'
		//    'startStep' startStep=[ValidationStep|EString]
		//    ('step' '{' step+=Step ( "," step+=Step)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ModerationProcess'
		public Keyword getModerationProcessKeyword_0() { return cModerationProcessKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'startStep'
		public Keyword getStartStepKeyword_3() { return cStartStepKeyword_3; }
		
		//startStep=[ValidationStep|EString]
		public Assignment getStartStepAssignment_4() { return cStartStepAssignment_4; }
		
		//[ValidationStep|EString]
		public CrossReference getStartStepValidationStepCrossReference_4_0() { return cStartStepValidationStepCrossReference_4_0; }
		
		//EString
		public RuleCall getStartStepValidationStepEStringParserRuleCall_4_0_1() { return cStartStepValidationStepEStringParserRuleCall_4_0_1; }
		
		//('step' '{' step+=Step ( "," step+=Step)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'step'
		public Keyword getStepKeyword_5_0() { return cStepKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//step+=Step
		public Assignment getStepAssignment_5_2() { return cStepAssignment_5_2; }
		
		//Step
		public RuleCall getStepStepParserRuleCall_5_2_0() { return cStepStepParserRuleCall_5_2_0; }
		
		//( "," step+=Step)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//step+=Step
		public Assignment getStepAssignment_5_3_1() { return cStepAssignment_5_3_1; }
		
		//Step
		public RuleCall getStepStepParserRuleCall_5_3_1_0() { return cStepStepParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.End");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//End returns End:
		//    {End}
		//    'End'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{End}
		//'End'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{End}
		public Action getEndAction_0() { return cEndAction_0; }
		
		//'End'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class AutomaticElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Automatic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAutomaticKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMethodKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMethodAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMethodEStringParserRuleCall_3_1_0 = (RuleCall)cMethodAssignment_3_1.eContents().get(0);
		private final Keyword cNextApproveKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNextApproveAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cNextApproveStepCrossReference_5_0 = (CrossReference)cNextApproveAssignment_5.eContents().get(0);
		private final RuleCall cNextApproveStepEStringParserRuleCall_5_0_1 = (RuleCall)cNextApproveStepCrossReference_5_0.eContents().get(1);
		private final Keyword cNextRejectKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNextRejectAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cNextRejectStepCrossReference_7_0 = (CrossReference)cNextRejectAssignment_7.eContents().get(0);
		private final RuleCall cNextRejectStepEStringParserRuleCall_7_0_1 = (RuleCall)cNextRejectStepCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Automatic returns Automatic:
		//    'Automatic'
		//    name=EString
		//    '{'
		//        ('method' method=EString)?
		//        'nextApprove' nextApprove=[Step|EString]
		//        'nextReject' nextReject=[Step|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Automatic'
		//name=EString
		//'{'
		//    ('method' method=EString)?
		//    'nextApprove' nextApprove=[Step|EString]
		//    'nextReject' nextReject=[Step|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Automatic'
		public Keyword getAutomaticKeyword_0() { return cAutomaticKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('method' method=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'method'
		public Keyword getMethodKeyword_3_0() { return cMethodKeyword_3_0; }
		
		//method=EString
		public Assignment getMethodAssignment_3_1() { return cMethodAssignment_3_1; }
		
		//EString
		public RuleCall getMethodEStringParserRuleCall_3_1_0() { return cMethodEStringParserRuleCall_3_1_0; }
		
		//'nextApprove'
		public Keyword getNextApproveKeyword_4() { return cNextApproveKeyword_4; }
		
		//nextApprove=[Step|EString]
		public Assignment getNextApproveAssignment_5() { return cNextApproveAssignment_5; }
		
		//[Step|EString]
		public CrossReference getNextApproveStepCrossReference_5_0() { return cNextApproveStepCrossReference_5_0; }
		
		//EString
		public RuleCall getNextApproveStepEStringParserRuleCall_5_0_1() { return cNextApproveStepEStringParserRuleCall_5_0_1; }
		
		//'nextReject'
		public Keyword getNextRejectKeyword_6() { return cNextRejectKeyword_6; }
		
		//nextReject=[Step|EString]
		public Assignment getNextRejectAssignment_7() { return cNextRejectAssignment_7; }
		
		//[Step|EString]
		public CrossReference getNextRejectStepCrossReference_7_0() { return cNextRejectStepCrossReference_7_0; }
		
		//EString
		public RuleCall getNextRejectStepEStringParserRuleCall_7_0_1() { return cNextRejectStepEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ManualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.Manual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNextApproveKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNextApproveAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cNextApproveStepCrossReference_4_0 = (CrossReference)cNextApproveAssignment_4.eContents().get(0);
		private final RuleCall cNextApproveStepEStringParserRuleCall_4_0_1 = (RuleCall)cNextApproveStepCrossReference_4_0.eContents().get(1);
		private final Keyword cNextRejectKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNextRejectAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cNextRejectStepCrossReference_6_0 = (CrossReference)cNextRejectAssignment_6.eContents().get(0);
		private final RuleCall cNextRejectStepEStringParserRuleCall_6_0_1 = (RuleCall)cNextRejectStepCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Manual returns Manual:
		//    'Manual'
		//    name=EString
		//    '{'
		//        'nextApprove' nextApprove=[Step|EString]
		//        'nextReject' nextReject=[Step|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Manual'
		//name=EString
		//'{'
		//    'nextApprove' nextApprove=[Step|EString]
		//    'nextReject' nextReject=[Step|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Manual'
		public Keyword getManualKeyword_0() { return cManualKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'nextApprove'
		public Keyword getNextApproveKeyword_3() { return cNextApproveKeyword_3; }
		
		//nextApprove=[Step|EString]
		public Assignment getNextApproveAssignment_4() { return cNextApproveAssignment_4; }
		
		//[Step|EString]
		public CrossReference getNextApproveStepCrossReference_4_0() { return cNextApproveStepCrossReference_4_0; }
		
		//EString
		public RuleCall getNextApproveStepEStringParserRuleCall_4_0_1() { return cNextApproveStepEStringParserRuleCall_4_0_1; }
		
		//'nextReject'
		public Keyword getNextRejectKeyword_5() { return cNextRejectKeyword_5; }
		
		//nextReject=[Step|EString]
		public Assignment getNextRejectAssignment_6() { return cNextRejectAssignment_6; }
		
		//[Step|EString]
		public CrossReference getNextRejectStepCrossReference_6_0() { return cNextRejectStepCrossReference_6_0; }
		
		//EString
		public RuleCall getNextRejectStepEStringParserRuleCall_6_0_1() { return cNextRejectStepEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	public class GradeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.GradeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCUSTOMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCUSTOMCUSTOMKeyword_0_0 = (Keyword)cCUSTOMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTARSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTARSSTARSKeyword_1_0 = (Keyword)cSTARSEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum GradeType returns GradeType:
		//                CUSTOM = 'CUSTOM' | STARS = 'STARS';
		public EnumRule getRule() { return rule; }
		
		//CUSTOM = 'CUSTOM' | STARS = 'STARS'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CUSTOM = 'CUSTOM'
		public EnumLiteralDeclaration getCUSTOMEnumLiteralDeclaration_0() { return cCUSTOMEnumLiteralDeclaration_0; }
		
		//'CUSTOM'
		public Keyword getCUSTOMCUSTOMKeyword_0_0() { return cCUSTOMCUSTOMKeyword_0_0; }
		
		//STARS = 'STARS'
		public EnumLiteralDeclaration getSTARSEnumLiteralDeclaration_1() { return cSTARSEnumLiteralDeclaration_1; }
		
		//'STARS'
		public Keyword getSTARSSTARSKeyword_1_0() { return cSTARSSTARSKeyword_1_0; }
	}
	public class ReviewTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.ReviewType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cONLYGRADEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cONLYGRADEONLYGRADEKeyword_0_0 = (Keyword)cONLYGRADEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANNOTATEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANNOTATEDANNOTATEDKeyword_1_0 = (Keyword)cANNOTATEDEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ReviewType returns ReviewType:
		//                ONLYGRADE = 'ONLYGRADE' | ANNOTATED = 'ANNOTATED';
		public EnumRule getRule() { return rule; }
		
		//ONLYGRADE = 'ONLYGRADE' | ANNOTATED = 'ANNOTATED'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ONLYGRADE = 'ONLYGRADE'
		public EnumLiteralDeclaration getONLYGRADEEnumLiteralDeclaration_0() { return cONLYGRADEEnumLiteralDeclaration_0; }
		
		//'ONLYGRADE'
		public Keyword getONLYGRADEONLYGRADEKeyword_0_0() { return cONLYGRADEONLYGRADEKeyword_0_0; }
		
		//ANNOTATED = 'ANNOTATED'
		public EnumLiteralDeclaration getANNOTATEDEnumLiteralDeclaration_1() { return cANNOTATEDEnumLiteralDeclaration_1; }
		
		//'ANNOTATED'
		public Keyword getANNOTATEDANNOTATEDKeyword_1_0() { return cANNOTATEDANNOTATEDKeyword_1_0; }
	}
	public class CommentTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Assign3.CommentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSIMPLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSIMPLESIMPLEKeyword_0_0 = (Keyword)cSIMPLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRICHTEXTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRICHTEXTRICHTEXTKeyword_1_0 = (Keyword)cRICHTEXTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CommentType returns CommentType:
		//                SIMPLE = 'SIMPLE' | RICHTEXT = 'RICHTEXT';
		public EnumRule getRule() { return rule; }
		
		//SIMPLE = 'SIMPLE' | RICHTEXT = 'RICHTEXT'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SIMPLE = 'SIMPLE'
		public EnumLiteralDeclaration getSIMPLEEnumLiteralDeclaration_0() { return cSIMPLEEnumLiteralDeclaration_0; }
		
		//'SIMPLE'
		public Keyword getSIMPLESIMPLEKeyword_0_0() { return cSIMPLESIMPLEKeyword_0_0; }
		
		//RICHTEXT = 'RICHTEXT'
		public EnumLiteralDeclaration getRICHTEXTEnumLiteralDeclaration_1() { return cRICHTEXTEnumLiteralDeclaration_1; }
		
		//'RICHTEXT'
		public Keyword getRICHTEXTRICHTEXTKeyword_1_0() { return cRICHTEXTRICHTEXTKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final UserFeedbackElements pUserFeedback;
	private final StepElements pStep;
	private final ValidationStepElements pValidationStep;
	private final SubjectElements pSubject;
	private final EStringElements pEString;
	private final FeatureElements pFeature;
	private final ReviewElements pReview;
	private final CommentElements pComment;
	private final GradeTypeElements eGradeType;
	private final ReviewTypeElements eReviewType;
	private final EBooleanElements pEBoolean;
	private final CommentTypeElements eCommentType;
	private final ModerationProcessElements pModerationProcess;
	private final EndElements pEnd;
	private final AutomaticElements pAutomatic;
	private final ManualElements pManual;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public Assign3GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pUserFeedback = new UserFeedbackElements();
		this.pStep = new StepElements();
		this.pValidationStep = new ValidationStepElements();
		this.pSubject = new SubjectElements();
		this.pEString = new EStringElements();
		this.pFeature = new FeatureElements();
		this.pReview = new ReviewElements();
		this.pComment = new CommentElements();
		this.eGradeType = new GradeTypeElements();
		this.eReviewType = new ReviewTypeElements();
		this.pEBoolean = new EBooleanElements();
		this.eCommentType = new CommentTypeElements();
		this.pModerationProcess = new ModerationProcessElements();
		this.pEnd = new EndElements();
		this.pAutomatic = new AutomaticElements();
		this.pManual = new ManualElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.Assign3".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model returns Model:
	//    'Model'
	//    name=EString
	//    '{'
	//        'subject' subject=Subject
	//    '}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//UserFeedback returns UserFeedback:
	//    Review | Comment;
	public UserFeedbackElements getUserFeedbackAccess() {
		return pUserFeedback;
	}
	
	public ParserRule getUserFeedbackRule() {
		return getUserFeedbackAccess().getRule();
	}
	
	//Step returns Step:
	//    End | Automatic | Manual;
	public StepElements getStepAccess() {
		return pStep;
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}
	
	//ValidationStep returns ValidationStep:
	//    Automatic | Manual;
	public ValidationStepElements getValidationStepAccess() {
		return pValidationStep;
	}
	
	public ParserRule getValidationStepRule() {
		return getValidationStepAccess().getRule();
	}
	
	//Subject returns Subject:
	//    'Subject'
	//    name=EString
	//    '{'
	//        'userFeedback' '{' userFeedback+=UserFeedback ( "," userFeedback+=UserFeedback)* '}'
	//        ('feature' '{' feature+=Feature ( "," feature+=Feature)* '}' )?
	//    '}';
	public SubjectElements getSubjectAccess() {
		return pSubject;
	}
	
	public ParserRule getSubjectRule() {
		return getSubjectAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Feature returns Feature:
	//    {Feature}
	//    'Feature'
	//    name=EString;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//Review returns Review:
	//    {Review}
	//    'Review'
	//    name=EString
	//    '{'
	//        ('gradeType' gradeType=GradeType)?
	//        ('reviewType' reviewType=ReviewType)?
	//    '}';
	public ReviewElements getReviewAccess() {
		return pReview;
	}
	
	public ParserRule getReviewRule() {
		return getReviewAccess().getRule();
	}
	
	//Comment returns Comment:
	//    reply?='reply'
	//    moderation?='moderation'
	//    'Comment'
	//    name=EString
	//    '{'
	//        ('commentType' commentType=CommentType)?
	//        ('moderationProcess' moderationProcess=ModerationProcess)?
	//    '}';
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//enum GradeType returns GradeType:
	//                CUSTOM = 'CUSTOM' | STARS = 'STARS';
	public GradeTypeElements getGradeTypeAccess() {
		return eGradeType;
	}
	
	public EnumRule getGradeTypeRule() {
		return getGradeTypeAccess().getRule();
	}
	
	//enum ReviewType returns ReviewType:
	//                ONLYGRADE = 'ONLYGRADE' | ANNOTATED = 'ANNOTATED';
	public ReviewTypeElements getReviewTypeAccess() {
		return eReviewType;
	}
	
	public EnumRule getReviewTypeRule() {
		return getReviewTypeAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum CommentType returns CommentType:
	//                SIMPLE = 'SIMPLE' | RICHTEXT = 'RICHTEXT';
	public CommentTypeElements getCommentTypeAccess() {
		return eCommentType;
	}
	
	public EnumRule getCommentTypeRule() {
		return getCommentTypeAccess().getRule();
	}
	
	//ModerationProcess returns ModerationProcess:
	//    'ModerationProcess'
	//    name=EString
	//    '{'
	//        'startStep' startStep=[ValidationStep|EString]
	//        ('step' '{' step+=Step ( "," step+=Step)* '}' )?
	//    '}';
	public ModerationProcessElements getModerationProcessAccess() {
		return pModerationProcess;
	}
	
	public ParserRule getModerationProcessRule() {
		return getModerationProcessAccess().getRule();
	}
	
	//End returns End:
	//    {End}
	//    'End'
	//    name=EString;
	public EndElements getEndAccess() {
		return pEnd;
	}
	
	public ParserRule getEndRule() {
		return getEndAccess().getRule();
	}
	
	//Automatic returns Automatic:
	//    'Automatic'
	//    name=EString
	//    '{'
	//        ('method' method=EString)?
	//        'nextApprove' nextApprove=[Step|EString]
	//        'nextReject' nextReject=[Step|EString]
	//    '}';
	public AutomaticElements getAutomaticAccess() {
		return pAutomatic;
	}
	
	public ParserRule getAutomaticRule() {
		return getAutomaticAccess().getRule();
	}
	
	//Manual returns Manual:
	//    'Manual'
	//    name=EString
	//    '{'
	//        'nextApprove' nextApprove=[Step|EString]
	//        'nextReject' nextReject=[Step|EString]
	//    '}';
	public ManualElements getManualAccess() {
		return pManual;
	}
	
	public ParserRule getManualRule() {
		return getManualAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
