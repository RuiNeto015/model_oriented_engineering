/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import pt.isep.enorm.atb.cr2.Model
import pt.isep.enorm.atb.cr2.Subject

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (model : resource.allContents.toIterable.filter(Model)) {
        	fsa.generateFile( model.name + ".puml", model.compile)
        }
	}
	
	private def compile(Model model) '''
		@startuml
		' A diagram representation of the model «model.name»
		«model.subject.compile»
		@enduml 
		'''

	private def compile(Subject sub) '''
		' For Subject and Features of Subject
		class «sub.name» << (S,#FF7700) >> {
		«FOR feat : sub.feature»
			«feat.name»
		«ENDFOR»
		}
		' For UserFeedback
		«FOR uFB : sub.userFeedback»
		class «uFB.name» << (F,green) >> {
		}
		«ENDFOR»
		' For link between Subject and UserFeedback
		«FOR uFB : sub.userFeedback»
		«sub.name» *-> «uFB.name»
		«ENDFOR»		
		'''
}
